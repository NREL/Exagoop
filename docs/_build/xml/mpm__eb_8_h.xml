<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="mpm__eb_8_h" kind="file" language="C++">
    <compoundname>mpm_eb.H</compoundname>
    <includes local="no">AMReX.H</includes>
    <includes local="no">AMReX_ParmParse.H</includes>
    <includes local="no">AMReX_MultiFab.H</includes>
    <includes local="no">AMReX_EB2_IF_Cylinder.H</includes>
    <includes local="no">AMReX_EBFArrayBox.H</includes>
    <includes local="no">AMReX_EBFabFactory.H</includes>
    <includes local="no">AMReX_PlotFileUtil.H</includes>
    <includes local="no">AMReX_EB2.H</includes>
    <includes local="no">AMReX_EB2_IF.H</includes>
    <includes local="no">AMReX_EB2_IF_Plane.H</includes>
    <includes local="no">AMReX_EB2_IF_Polynomial.H</includes>
    <includes local="no">AMReX_EB2_IF_Intersection.H</includes>
    <includes local="no">AMReX_EB2_IF_Union.H</includes>
    <includes local="no">AMReX_EB2_IF_Translation.H</includes>
    <includes local="no">AMReX_EB_utils.H</includes>
    <includes refid="constants_8_h" local="no">constants.H</includes>
    <includes refid="interpolants_8_h" local="no">interpolants.H</includes>
    <includedby refid="main_8cpp" local="no">E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/main.cpp</includedby>
    <includedby refid="mpm__eb_8cpp" local="no">E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.cpp</includedby>
    <includedby refid="mpm__init_8cpp" local="no">E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_init.cpp</includedby>
    <includedby refid="mpm__particle__timestep_8cpp" local="no">E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_particle_timestep.cpp</includedby>
    <includedby refid="nodal__data__ops_8cpp" local="no">E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/nodal_data_ops.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>AMReX.H</label>
      </node>
      <node id="9">
        <label>AMReX_EB2.H</label>
      </node>
      <node id="10">
        <label>AMReX_EB2_IF.H</label>
      </node>
      <node id="5">
        <label>AMReX_EB2_IF_Cylinder.H</label>
      </node>
      <node id="13">
        <label>AMReX_EB2_IF_Intersection.H</label>
      </node>
      <node id="11">
        <label>AMReX_EB2_IF_Plane.H</label>
      </node>
      <node id="12">
        <label>AMReX_EB2_IF_Polynomial.H</label>
      </node>
      <node id="15">
        <label>AMReX_EB2_IF_Translation.H</label>
      </node>
      <node id="14">
        <label>AMReX_EB2_IF_Union.H</label>
      </node>
      <node id="6">
        <label>AMReX_EBFArrayBox.H</label>
      </node>
      <node id="7">
        <label>AMReX_EBFabFactory.H</label>
      </node>
      <node id="16">
        <label>AMReX_EB_utils.H</label>
      </node>
      <node id="4">
        <label>AMReX_MultiFab.H</label>
      </node>
      <node id="21">
        <label>AMReX_NeighborParticles.H</label>
      </node>
      <node id="3">
        <label>AMReX_ParmParse.H</label>
      </node>
      <node id="20">
        <label>AMReX_Particles.H</label>
      </node>
      <node id="8">
        <label>AMReX_PlotFileUtil.H</label>
      </node>
      <node id="23">
        <label>AMReX_REAL.H</label>
      </node>
      <node id="17">
        <label>constants.H</label>
        <link refid="constants_8_h_source"/>
      </node>
      <node id="18">
        <label>interpolants.H</label>
        <link refid="interpolants_8_h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H</label>
        <link refid="mpm__eb_8_h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>mpm_particle_container.H</label>
        <link refid="mpm__particle__container_8_h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>mpm_specs.H</label>
        <link refid="mpm__specs_8_h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacempm__ebtools">mpm_ebtools</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="mpm__eb_8_h_1a428fa8767208abe4921a116e3684d384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AMREX_GPU_DEVICE AMREX_FORCE_INLINE amrex::Real</type>
        <definition>AMREX_GPU_DEVICE AMREX_FORCE_INLINE amrex::Real get_levelset_value</definition>
        <argsstring>(amrex::Array4&lt; amrex::Real &gt; phi, const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt; problo, const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt; dx, amrex::Real ptxyz[AMREX_SPACEDIM], amrex::Real lsref)</argsstring>
        <name>get_levelset_value</name>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt;</type>
          <declname>problo</declname>
        </param>
        <param>
          <type>const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt;</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>ptxyz</declname>
          <array>[AMREX_SPACEDIM]</array>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>lsref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H" line="40" column="13" bodyfile="E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H" bodystart="40" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="mpm__eb_8_h_1ae8a89ebbbf2710af6156978063294c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AMREX_GPU_DEVICE AMREX_FORCE_INLINE void</type>
        <definition>AMREX_GPU_DEVICE AMREX_FORCE_INLINE void get_levelset_grad</definition>
        <argsstring>(amrex::Array4&lt; amrex::Real &gt; phi, const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt; problo, const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt; dx, amrex::Real ptxyz[AMREX_SPACEDIM], amrex::Real lsref, amrex::Real lsgrad[AMREX_SPACEDIM])</argsstring>
        <name>get_levelset_grad</name>
        <param>
          <type>amrex::Array4&lt; amrex::Real &gt;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt;</type>
          <declname>problo</declname>
        </param>
        <param>
          <type>const amrex::GpuArray&lt; amrex::Real, AMREX_SPACEDIM &gt;</type>
          <declname>dx</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>ptxyz</declname>
          <array>[AMREX_SPACEDIM]</array>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>lsref</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>lsgrad</declname>
          <array>[AMREX_SPACEDIM]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H" line="81" column="6" bodyfile="E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H" bodystart="81" bodyend="124"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_MPM_EB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MPM_EB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_ParmParse.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_MultiFab.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Cylinder.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EBFArrayBox.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EBFabFactory.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_PlotFileUtil.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Plane.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Polynomial.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Intersection.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Union.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Intersection.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB2_IF_Translation.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_EB_utils.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;constants.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;interpolants.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">amrex;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mpm_ebtools</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>EBFArrayBoxFactory*<sp/>ebfactory;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>MultiFab<sp/>*lsphi;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ls_refinement;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>using_levelset_geometry;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_eb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry<sp/>&amp;geom,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray<sp/>&amp;ba,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping<sp/>&amp;dm);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>make_wedge_hopper_levelset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry<sp/>&amp;geom,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray<sp/>&amp;ba,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping<sp/>&amp;dm);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">AMREX_GPU_DEVICE</highlight></codeline>
<codeline lineno="39"><highlight class="normal">AMREX_FORCE_INLINE</highlight></codeline>
<codeline lineno="40"><highlight class="normal">amrex::Real<sp/>get_levelset_value(amrex::Array4&lt;amrex::Real&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::GpuArray&lt;amrex::Real,<sp/>AMREX_SPACEDIM&gt;<sp/>problo,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::GpuArray&lt;amrex::Real,<sp/>AMREX_SPACEDIM&gt;<sp/>dx,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/>ptxyz[AMREX_SPACEDIM],</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/>lsref)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assuming<sp/>a<sp/>redistribute<sp/>was<sp/>done<sp/>and<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//particle<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>amrex::GpuArray&lt;amrex::Real,AMREX_SPACEDIM&gt;<sp/>ls_dx;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo[AMREX_SPACEDIM]={0};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi[AMREX_SPACEDIM]={0};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuArray&lt;int,<sp/>AMREX_SPACEDIM&gt;<sp/>order_scheme_pseudo={1,1,1};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuArray&lt;int,<sp/>AMREX_SPACEDIM&gt;<sp/>periodic_pseudo={1,1,1};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[XDIR]=dx[XDIR]/lsref;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[YDIR]=dx[YDIR]/lsref;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[ZDIR]=dx[ZDIR]/lsref;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=amrex::Math::floor((ptxyz[XDIR]-problo[XDIR]+TINYVAL)/ls_dx[XDIR]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=amrex::Math::floor((ptxyz[YDIR]-problo[YDIR]+TINYVAL)/ls_dx[YDIR]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=amrex::Math::floor((ptxyz[ZDIR]-problo[ZDIR]+TINYVAL)/ls_dx[ZDIR]);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>amrex::Real<sp/>lsval=0.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;n&lt;2;n++)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=0;m&lt;2;m++)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l=0;l&lt;2;l++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsval<sp/>+=<sp/>phi(i+l,j+m,k+n)*</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisval(l,m,n,i,j,k,ptxyz,problo,ls_dx,order_scheme_pseudo,periodic_pseudo,lo,hi);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(lsval);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">AMREX_GPU_DEVICE<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">AMREX_FORCE_INLINE</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_levelset_grad(amrex::Array4&lt;amrex::Real&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::GpuArray&lt;amrex::Real,<sp/>AMREX_SPACEDIM&gt;<sp/>problo,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>amrex::GpuArray&lt;amrex::Real,<sp/>AMREX_SPACEDIM&gt;<sp/>dx,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/>ptxyz[AMREX_SPACEDIM],</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amrex::Real<sp/>lsref,amrex::Real<sp/>lsgrad[AMREX_SPACEDIM])</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assuming<sp/>a<sp/>redistribute<sp/>was<sp/>done<sp/>and<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//particle<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>tilebox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>amrex::GpuArray&lt;amrex::Real,AMREX_SPACEDIM&gt;<sp/>ls_dx;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo[AMREX_SPACEDIM]={0};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi[AMREX_SPACEDIM]={0};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuArray&lt;int,<sp/>AMREX_SPACEDIM&gt;<sp/>order_scheme_pseudo={1,1,1};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuArray&lt;int,<sp/>AMREX_SPACEDIM&gt;<sp/>periodic_pseudo={1,1,1};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[XDIR]=dx[XDIR]/lsref;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[YDIR]=dx[YDIR]/lsref;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ls_dx[ZDIR]=dx[ZDIR]/lsref;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=amrex::Math::floor((ptxyz[XDIR]-problo[XDIR]+TINYVAL)/ls_dx[XDIR]);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=amrex::Math::floor((ptxyz[YDIR]-problo[YDIR]+TINYVAL)/ls_dx[YDIR]);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=amrex::Math::floor((ptxyz[ZDIR]-problo[ZDIR]+TINYVAL)/ls_dx[ZDIR]);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>lsgrad[XDIR]=0.0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>lsgrad[YDIR]=0.0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>lsgrad[ZDIR]=0.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0;n&lt;2;n++)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m=0;m&lt;2;m++)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l=0;l&lt;2;l++)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsgrad[XDIR]<sp/>+=<sp/>phi(i+l,j+m,k+n)*</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisvalder(XDIR,l,m,n,i,j,k,ptxyz,problo,ls_dx,order_scheme_pseudo,periodic_pseudo,lo,hi);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsgrad[YDIR]<sp/>+=<sp/>phi(i+l,j+m,k+n)*</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisvalder(YDIR,l,m,n,i,j,k,ptxyz,problo,ls_dx,order_scheme_pseudo,periodic_pseudo,lo,hi);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsgrad[ZDIR]<sp/>+=<sp/>phi(i+l,j+m,k+n)*</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basisvalder(ZDIR,l,m,n,i,j,k,ptxyz,problo,ls_dx,order_scheme_pseudo,periodic_pseudo,lo,hi);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="E:/Research/02_CODE_DEVELOPMENTS/04_EXAGOOP/Source/mpm_eb.H"/>
  </compounddef>
</doxygen>
